name: Builds

on:
  push:
    branches:
      - master
      - v*.*
    paths-ignore:
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/workflows/**"
      - "!.github/workflows/builds.yaml"
      - .clang-format
      - .gitattributes
      - .github/dependabot.yaml
      - .gitignore
      - .shellcheckrc
      - LICENSE
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/workflows/**"
      - "!.github/workflows/builds.yaml"
      - .clang-format
      - .gitattributes
      - .github/dependabot.yaml
      - .gitignore
      - .shellcheckrc
      - LICENSE

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

permissions: {}

env:
  MESON_TESTTHREADS: 1

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:${{ matrix.image-tag }}
    strategy:
      fail-fast: false
      matrix:
        image-tag: ["18.04", "20.04"]
        buildtype: [release, debug]
        jdk-distribution: [adopt]
        jdk-version: ["8"]
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Initialize
        run: |
          apt-get -y update
          apt-get -y install git build-essential ninja-build pkg-config maven \
            openjdk-8-jdk libbsd-dev libmicrohttpd-dev liburcu-dev \
            libyaml-dev liblz4-dev libcurl4-openssl-dev python3-pip

      - name: Checkout hse-java
        uses: actions/checkout@v3

      - name: Determine branches
        id: determine-branches
        shell: sh +e {0}
        run: |
          for p in hse; do
            [ "$GITHUB_EVENT_NAME" = "pull_request" ] && git ls-remote \
              --exit-code --heads "https://github.com/hse-project/$p.git" \
              "$GITHUB_HEAD_REF" > /dev/null
            if [ $? -eq 0 ]; then
              echo "::set-output name=$p::$GITHUB_HEAD_REF"
            else
              echo "::set-output name=$p::master"
            fi
          done

      - name: Checkout HSE
        uses: actions/checkout@v3
        with:
          repository: hse-project/hse
          path: subprojects/hse
          ref: ${{ steps.determine-branches.outputs.hse }}

      - name: Setup Java
        id: setup-java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.jdk-distribution }}
          java-version: ${{ matrix.jdk-version }}
          cache: maven

      - name: Get Meson on ubuntu-18.04
        if: ${{ matrix.image-tag == '18.04' }}
        run: |
          apt-get -y install python3.7
          python3.7 -m pip install meson

      - name: Get Meson on ubuntu-20.04
        if: ${{ matrix.image-tag == '20.04' }}
        run: |
          python3 -m pip install meson

      # Download all dependencies up front if cache wasn't hit. Will keep
      # Maven from downloading dependencies during the test phase which could
      # cause tests to timeout.
      - name: Download Maven dependencies
        if: steps.setup-java.outputs.cache-hit != 'true'
        run: |
          mvn dependency:go-offline

      - name: Setup
        run: |
          meson builddir --buildtype=${{ matrix.buildtype }} \
            --fatal-meson-warnings --werror -Ddocs=enabled

      - name: Build
        run: |
          ninja -C builddir

      - name: Test
        run: |
          meson test -C builddir --print-errorlogs --no-stdsplit

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.job }}-${{ matrix.image-tag }}-${{ matrix.buildtype }}
          path: builddir/meson-logs/

  fedora:
    runs-on: ubuntu-latest
    container:
      image: fedora:${{ matrix.image-tag }}
    strategy:
      fail-fast: false
      matrix:
        image-tag: [36]
        buildtype: [release, debug]
        jdk-distribution: [adopt]
        jdk-version: ["11"]

    steps:
      - name: Initialize
        run: |
          dnf group install -y --with-optional \
            "C Development Tools and Libraries"
          dnf install -y git python3-pip ninja-build pkg-config maven \
            libmicrohttpd-devel userspace-rcu-devel libyaml-devel lz4-devel \
            libbsd-devel libcurl-devel libxml2-devel libxslt-devel
          python3 -m pip install meson

      - name: Checkout hse-java
        uses: actions/checkout@v3

      - name: Determine branches
        id: determine-branches
        shell: sh +e {0}
        run: |
          for p in hse; do
            [ "$GITHUB_EVENT_NAME" = "pull_request" ] && git ls-remote \
              --exit-code --heads "https://github.com/hse-project/$p.git" \
              "$GITHUB_HEAD_REF" > /dev/null
            if [ $? -eq 0 ]; then
              echo "::set-output name=$p::$GITHUB_HEAD_REF"
            else
              echo "::set-output name=$p::master"
            fi
          done

      - name: Checkout HSE
        uses: actions/checkout@v3
        with:
          repository: hse-project/hse
          path: subprojects/hse
          ref: ${{ steps.determine-branches.outputs.hse }}

      - name: Setup Java
        id: setup-java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.jdk-distribution }}
          java-version: ${{ matrix.jdk-version }}
          cache: maven

      # Download all dependencies up front if cache wasn't hit. Will keep
      # Maven from downloading dependencies during the test phase which could
      # cause tests to timeout.
      - name: Download Maven dependencies
        if: steps.setup-java.outputs.cache-hit != 'true'
        run: |
          mvn dependency:go-offline

      - name: Setup
        run: |
          meson builddir --buildtype=${{ matrix.buildtype }} \
            --fatal-meson-warnings --werror -Ddocs=enabled

      - name: Build
        run: |
          ninja -C builddir

      - name: Test
        run: |
          meson test -C builddir --print-errorlogs --no-stdsplit

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.job }}-${{ matrix.image-tag }}-${{ matrix.buildtype }}
          path: builddir/meson-logs/

  almalinux:
    runs-on: ubuntu-latest
    container:
      image: almalinux:${{ matrix.image-tag }}
    strategy:
      fail-fast: false
      matrix:
        image-tag: [8]
        buildtype: [release, debug]
        jdk-distribution: [adopt]
        jdk-version: ["17"]

    steps:
      - name: Initialize
        run: |
          dnf install -y dnf-plugins-core epel-release
          dnf update -y
          dnf config-manager --set-enabled powertools
          dnf group install -y --with-optional "Development Tools"
          dnf install -y git ninja-build pkg-config maven libmicrohttpd-devel \
            userspace-rcu-devel libyaml-devel lz4-devel libbsd-devel \
            libcurl-devel python38 libxml2 libxslt
          python3 -m pip install meson

      - name: Checkout hse-java
        uses: actions/checkout@v3

      - name: Determine branches
        id: determine-branches
        shell: sh +e {0}
        run: |
          for p in hse; do
            [ "$GITHUB_EVENT_NAME" = "pull_request" ] && git ls-remote \
              --exit-code --heads "https://github.com/hse-project/$p.git" \
              "$GITHUB_HEAD_REF" > /dev/null
            if [ $? -eq 0 ]; then
              echo "::set-output name=$p::$GITHUB_HEAD_REF"
            else
              echo "::set-output name=$p::master"
            fi
          done

      - name: Checkout HSE
        uses: actions/checkout@v3
        with:
          repository: hse-project/hse
          path: subprojects/hse
          ref: ${{ steps.determine-branches.outputs.hse }}

      - name: Setup Java
        id: setup-java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.jdk-distribution }}
          java-version: ${{ matrix.jdk-version }}
          cache: maven

      # Download all dependencies up front if cache wasn't hit. Will keep
      # Maven from downloading dependencies during the test phase which could
      # cause tests to timeout.
      - name: Download Maven dependencies
        if: steps.setup-java.outputs.cache-hit != 'true'
        run: |
          mvn dependency:go-offline

      - name: Setup
        run: |
          meson builddir --buildtype=${{ matrix.buildtype }} \
            --fatal-meson-warnings --werror -Ddocs=enabled

      - name: Build
        run: |
          ninja -C builddir

      - name: Test
        run: |
          meson test -C builddir --print-errorlogs --no-stdsplit

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.job }}-${{ matrix.image-tag }}-${{ matrix.buildtype }}
          path: builddir/meson-logs/

  architectures:
    runs-on: ubuntu-latest
    container:
      image: debian:11
    strategy:
      fail-fast: false
      matrix:
        buildtype: [release, debug]
        arch: [s390x]
        jdk-distribution: [adopt]
        jdk-version: ["17"]

    steps:
      - name: Initialize
        run: |
          dpkg --add-architecture ${{ matrix.arch }}
          apt-get -y update
          apt-get -y install git python3 python3-pip pkg-config ninja-build \
            maven build-essential crossbuild-essential-${{ matrix.arch }} \
            libpython3-dev:${{ matrix.arch }} liburcu-dev:${{ matrix.arch }} \
            libcurl4-openssl-dev:${{ matrix.arch }} \
            libbsd-dev:${{ matrix.arch }} libmicrohttpd-dev:${{ matrix.arch }} \
            libyaml-dev:${{ matrix.arch }}
          python3 -m pip install meson Cython

      - name: Checkout hse-java
        uses: actions/checkout@v3

      - name: Determine branches
        id: determine-branches
        shell: sh +e {0}
        run: |
          for p in hse; do
            [ "$GITHUB_EVENT_NAME" = "pull_request" ] && git ls-remote \
              --exit-code --heads "https://github.com/hse-project/$p.git" \
              "$GITHUB_HEAD_REF" > /dev/null
            if [ $? -eq 0 ]; then
              echo "::set-output name=$p::$GITHUB_HEAD_REF"
            else
              echo "::set-output name=$p::master"
            fi
          done

      - name: Checkout HSE
        uses: actions/checkout@v3
        with:
          repository: hse-project/hse
          path: subprojects/hse
          ref: ${{ steps.determine-branches.outputs.hse }}

      - name: Setup Java
        id: setup-java
        uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.jdk-distribution }}
          java-version: ${{ matrix.jdk-version }}
          cache: maven

      # Download all dependencies up front if cache wasn't hit. Will keep
      # Maven from downloading dependencies during the test phase which could
      # cause tests to timeout.
      - name: Download Maven dependencies
        if: steps.setup-java.outputs.cache-hit != 'true'
        run: |
          mvn dependency:go-offline

      - name: Setup
        run: |
          meson builddir --cross-file cross/${{ matrix.arch }}.ini \
            --cross-file cross/common.ini --buildtype=${{ matrix.buildtype }} \
            --werror

      - name: Build
        run: |
          ninja -C builddir

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ${{ github.job }}-${{ matrix.arch }}-${{ matrix.buildtype }}
          path: |
            builddir/meson-logs/
